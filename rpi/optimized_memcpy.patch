From f0da799fd28f5e2acb43a9a9d707874efea78e8a Mon Sep 17 00:00:00 2001
From: Harm Hanemaaijer <fgenfb@yahoo.com>
Date: Fri, 21 Jun 2013 00:26:17 +0200
Subject: [PATCH 2/2] Optimize kernel memcpy function


Signed-off-by: Harm Hanemaaijer <fgenfb@yahoo.com>
---
 arch/arm/include/asm/assembler.h |    2 +-
 arch/arm/lib/copy_from_user.S    |    4 +++
 arch/arm/lib/copy_template.S     |   67 ++++++++++++++++++++++++--------------
 arch/arm/lib/copy_to_user.S      |    7 ++++
 arch/arm/lib/memcpy.S            |    4 +++
 5 files changed, 58 insertions(+), 26 deletions(-)

diff --git a/arch/arm/include/asm/assembler.h b/arch/arm/include/asm/assembler.h
index 5c8b3bf4..f200900 100644
--- a/arch/arm/include/asm/assembler.h
+++ b/arch/arm/include/asm/assembler.h
@@ -70,7 +70,7 @@
  *
  * On Feroceon there is much to gain however, regardless of cache mode.
  */
-#ifdef CONFIG_CPU_FEROCEON
+#if defined(CONFIG_CPU_FEROCEON) || defined(CONFIG_CPU_V6)
 #define CALGN(code...) code
 #else
 #define CALGN(code...)
diff --git a/arch/arm/lib/copy_from_user.S b/arch/arm/lib/copy_from_user.S
index 66a477a..54f1151 100644
--- a/arch/arm/lib/copy_from_user.S
+++ b/arch/arm/lib/copy_from_user.S
@@ -64,6 +64,10 @@
 	W(str) \reg, [\ptr], #4
 	.endm
 
+	.macro str4w ptr reg1 reg2 reg3 reg4 abort
+	stmia \ptr!, {\reg1, \reg2, \reg3, \reg4}
+	.endm
+
 	.macro str8w ptr reg1 reg2 reg3 reg4 reg5 reg6 reg7 reg8 abort
 	stmia \ptr!, {\reg1, \reg2, \reg3, \reg4, \reg5, \reg6, \reg7, \reg8}
 	.endm
diff --git a/arch/arm/lib/copy_template.S b/arch/arm/lib/copy_template.S
index 805e3f8..e5da0df 100644
--- a/arch/arm/lib/copy_template.S
+++ b/arch/arm/lib/copy_template.S
@@ -66,19 +66,21 @@
  *	than one 32bit instruction in Thumb-2)
  */
 
+#define PREFETCH_DISTANCE 3
 
 		enter	r4, lr
 
 		subs	r2, r2, #4
+		bic     r3, r1, #31
 		blt	8f
 		ands	ip, r0, #3
-	PLD(	pld	[r1, #0]		)
+	PLD(	pld	[r3]			)
 		bne	9f
 		ands	ip, r1, #3
 		bne	10f
 
 1:		subs	r2, r2, #(28)
-		stmfd	sp!, {r5 - r8}
+		stmfd	sp!, {r5 - r9}
 		blt	5f
 
 	CALGN(	ands	ip, r0, #31		)
@@ -90,18 +92,27 @@
 	CALGN(	add	pc, r4, ip		)
 
 	PLD(	pld	[r1, #0]		)
-2:	PLD(	subs	r2, r2, #96		)
-	PLD(	pld	[r1, #28]		)
+2:
+		add     r9, r1, #PREFETCH_DISTANCE * 32
+		bic     r3, r9, #31
+	PLD(	subs	r2, r2, #PREFETCH_DISTANCE * 32)
+		sub	r9, r3, r1
 	PLD(	blt	4f			)
-	PLD(	pld	[r1, #60]		)
-	PLD(	pld	[r1, #92]		)
-
-3:	PLD(	pld	[r1, #124]		)
+.if PREFETCH_DISTANCE >= 4
+	PLD(	pld	[r3, #-96]		)
+.if PREFETCH_DISTANCE >= 3
+	PLD(	pld	[r3, #-64]		)
+.endif
+.endif
+	PLD(	pld	[r3, #-32]		)
+
+3:	PLD(	pld	[r1, r9]		)
 4:		ldr8w	r1, r3, r4, r5, r6, r7, r8, ip, lr, abort=20f
 		subs	r2, r2, #32
-		str8w	r0, r3, r4, r5, r6, r7, r8, ip, lr, abort=20f
+		str4w	r0, r3, r4, r5, r6, abort=20f
+		str4w   r0, r7, r8, ip, lr, abort=20f
 		bge	3b
-	PLD(	cmn	r2, #96			)
+	PLD(	cmn	r2, #PREFETCH_DISTANCE * 32	)
 	PLD(	bge	4b			)
 
 5:		ands	ip, r2, #28
@@ -143,7 +154,7 @@
 
 	CALGN(	bcs	2b			)
 
-7:		ldmfd	sp!, {r5 - r8}
+7:		ldmfd	sp!, {r5 - r9}
 
 8:		movs	r2, r2, lsl #31
 		ldr1b	r1, r3, ne, abort=21f
@@ -186,16 +197,22 @@
 	CALGN(	subcc	r2, r2, ip		)
 	CALGN(	bcc	15f			)
 
-11:		stmfd	sp!, {r5 - r9}
-
-	PLD(	pld	[r1, #0]		)
-	PLD(	subs	r2, r2, #96		)
-	PLD(	pld	[r1, #28]		)
-	PLD(	blt	13f			)
-	PLD(	pld	[r1, #60]		)
-	PLD(	pld	[r1, #92]		)
-
-12:	PLD(	pld	[r1, #124]		)
+11:		stmfd	sp!, {r5 - r10}
+
+                add     r10, r1, #PREFETCH_DISTANCE * 32
+                bic     r3, r10, #31
+        PLD(    subs    r2, r2, #PREFETCH_DISTANCE * 32)
+                sub     r10, r3, r1
+        PLD(    blt     13f                     )
+.if PREFETCH_DISTANCE >= 4
+        PLD(    pld     [r3, #-96]              )
+.if PREFETCH_DISTANCE >= 3
+        PLD(    pld     [r3, #-64]              )
+.endif
+.endif
+        PLD(    pld     [r3, #-32]              )
+
+12:	PLD(	pld	[r1, r10]		)
 13:		ldr4w	r1, r4, r5, r6, r7, abort=19f
 		mov	r3, lr, pull #\pull
 		subs	r2, r2, #32
@@ -217,10 +234,10 @@
 		orr	ip, ip, lr, push #\push
 		str8w	r0, r3, r4, r5, r6, r7, r8, r9, ip, , abort=19f
 		bge	12b
-	PLD(	cmn	r2, #96			)
-	PLD(	bge	13b			)
+	PLD(	cmn	r2, #PREFETCH_DISTANCE * 32	)
+	PLD(	bge	13b				)
 
-		ldmfd	sp!, {r5 - r9}
+		ldmfd	sp!, {r5 - r10}
 
 14:		ands	ip, r2, #28
 		beq	16f
@@ -257,7 +274,7 @@
 	.macro	copy_abort_preamble
 19:	ldmfd	sp!, {r5 - r9}
 	b	21f
-20:	ldmfd	sp!, {r5 - r8}
+20:	ldmfd	sp!, {r5 - r9}
 21:
 	.endm
 
diff --git a/arch/arm/lib/copy_to_user.S b/arch/arm/lib/copy_to_user.S
index d066df6..16295d4 100644
--- a/arch/arm/lib/copy_to_user.S
+++ b/arch/arm/lib/copy_to_user.S
@@ -60,6 +60,13 @@
 	strusr	\reg, \ptr, 4, abort=\abort
 	.endm
 
+	.macro str4w ptr reg1 reg2 reg3 reg4 abort
+	str1w \ptr, \reg1, \abort
+	str1w \ptr, \reg2, \abort
+	str1w \ptr, \reg3, \abort
+	str1w \ptr, \reg4, \abort
+	.endm
+
 	.macro str8w ptr reg1 reg2 reg3 reg4 reg5 reg6 reg7 reg8 abort
 	str1w \ptr, \reg1, \abort
 	str1w \ptr, \reg2, \abort
diff --git a/arch/arm/lib/memcpy.S b/arch/arm/lib/memcpy.S
index a9b9e22..b939948 100644
--- a/arch/arm/lib/memcpy.S
+++ b/arch/arm/lib/memcpy.S
@@ -36,6 +36,10 @@
 	W(str) \reg, [\ptr], #4
 	.endm
 
+	.macro str4w ptr reg1 reg2 reg3 reg4 abort
+	stmia \ptr!, {\reg1, \reg2, \reg3, \reg4}
+	.endm
+
 	.macro str8w ptr reg1 reg2 reg3 reg4 reg5 reg6 reg7 reg8 abort
 	stmia \ptr!, {\reg1, \reg2, \reg3, \reg4, \reg5, \reg6, \reg7, \reg8}
 	.endm
-- 
1.7.9.5

